{"version":3,"sources":["webpack:///./src/project/actionHandler.js","webpack:///./src/utils/actionHandler.js","webpack:///./src/project/actionType.js","webpack:///./src/dictionary/actionType.js"],"names":["run","param","console","log","type","actionType","ALERT","data","alert","LINK","window","open","url","params","MESSAGE","store","dispatch","POPUP_SLIDE","commit","SAVE","LOAD","CUSTOM","actionHandler","COPY"],"mappings":"qKAAA,uBAKMA,EAAM,SAACC,GACTC,QAAQC,IAAI,iBAAkBF,GAC9B,IAAOG,EAAQH,EAARG,KAGP,OADAF,QAAQC,IAAI,aAAcC,GACnBA,GACH,KAAKC,aAAWC,MACZJ,QAAQC,IAAIF,EAAMM,MAClBC,MAAMP,EAAMM,MAChB,MACA,KAAKF,aAAWI,KACZC,OAAOC,KAAKV,EAAMW,KACtB,QAQO,cACXZ,Q,oCC1BJ,+CAIMA,EAAM,SAACa,GACTX,QAAQC,IAAI,oBAAqBU,GACjC,IAAOT,EAAQS,EAART,KACP,OAAQA,GACJ,KAAKC,aAAWS,QAGd,YAFAC,aAAMC,SAAS,eAAgBH,EAAOZ,OAIxC,KAAKI,aAAWY,YACdF,aAAMG,OAAO,cAAeL,EAAOZ,OACnC,MAEF,KAAKI,aAAWc,KACdJ,aAAMG,OAAO,OAAQL,EAAOZ,OAC5B,MAEF,KAAKI,aAAWe,KACdL,aAAMC,SAAS,OAAQH,EAAOZ,OAC9B,MAEF,KAAKI,aAAWgB,OAEdC,aAActB,IAAIa,EAAOZ,OACzB,QAKK,cACXI,wBACAL,Q,qEC/BW,8CACRK,cADP,IAIIC,MAAO,W,kCCRX,OAAe,cACXQ,QAAS,UACTL,KAAM,OACNQ,YAAa,cACbI,OAAQ,SACRE,KAAM,OACNJ,KAAM,OACNC,KAAM","file":"js/chunk-17e6bd30.475c3bbd.js","sourcesContent":["// import $ from 'jquery';\n// import common from '@/utils/uiHandlers/common';\n\nimport actionType from './actionType';\n\nconst run = (param) => {\n    console.log('uiHandler.main', param);\n    const {type} = param;\n    \n    console.log('actionType', type);\n    switch(type){\n        case actionType.ALERT:\n            console.log(param.data);\n            alert(param.data);            \n        break; \n        case actionType.LINK: \n            window.open(param.url);\n        break;\n  \n        // default:\n        //     common.main(type, param)\n        // break;\n    }\n}\n\nexport default {\n    run,\n};","import store from '../vuex/store';\nimport actionHandler from '../project/actionHandler';\nimport actionType from '@/dictionary/actionType';\n\nconst run = (params) => {\n    console.log('actionHandler.run', params);\n    const {type} = params;\n    switch (type) {\n        case actionType.MESSAGE: {\n          store.dispatch('SEND_MESSAGE', params.param);\n          // store.dispatch('SEND_MESSAGE', { message: intent });\n          return;\n        }\n        case actionType.POPUP_SLIDE: {\n          store.commit('POPUP_SLIDE', params.param);\n          break;\n        }\n        case actionType.SAVE: { \n          store.commit('SAVE', params.param);\n          break;\n        }\n        case actionType.LOAD: { \n          store.dispatch('LOAD', params.param);\n          break;\n        }\n        case actionType.CUSTOM: { // 프로젝트 액션\n          // this.handleAction(action, param);\n          actionHandler.run(params.param);\n          break;\n        }\n     }\n};\n\nexport default {\n    actionType,\n    run,\n};","// import $ from 'jquery';\n// import common from '@/utils/uiHandlers/common';\nimport actionType from '@/dictionary/actionType';\n\nexport default {\n    ...actionType,\n\n    // 여기부터 프로젝트 정의\n    ALERT: 'ALERT',\n};","export default {\n    MESSAGE: 'MESSAGE', // 발화\n    LINK: 'LINK',       // 브라우저 열기\n    POPUP_SLIDE: 'POPUP_SLIDE', // 팝업창\n    CUSTOM: 'CUSTOM',   // 사용자 정의\n    COPY: 'COPY',       // 클립보드 복사  \n    SAVE: 'SAVE',       // 로컬스토리지에 저장한다.\n    LOAD: 'LOAD',       // 로컬스토리지에 읽어 서버에 전송한다.\n};"],"sourceRoot":""}